// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	fiber "github.com/gofiber/fiber/v2"
	mock "github.com/stretchr/testify/mock"
)

// BlogController is an autogenerated mock type for the BlogController type
type BlogController struct {
	mock.Mock
}

// CreateNewBlog provides a mock function with given fields: c
func (_m *BlogController) CreateNewBlog(c *fiber.Ctx) error {
	ret := _m.Called(c)

	if len(ret) == 0 {
		panic("no return value specified for CreateNewBlog")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllBlogs provides a mock function with given fields: c
func (_m *BlogController) GetAllBlogs(c *fiber.Ctx) error {
	ret := _m.Called(c)

	if len(ret) == 0 {
		panic("no return value specified for GetAllBlogs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewBlogController creates a new instance of BlogController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBlogController(t interface {
	mock.TestingT
	Cleanup(func())
}) *BlogController {
	mock := &BlogController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
